#include <iostream>

using namespace std;

//  struct a node first
  struct Node{
      int data;
      struct Node*left, *right;
  
  
//   declare a structure
   Node(int data){
       this -> data = data;
       left=right=NULL;
   }
  };
//   Make a function

  void printInorder(struct Node*node){
      if(node == NULL)
      
      return ;
      
      printInorder(node->left);
      cout<<node->data<<" ";
      printInorder(node->right);
  }
  
  void printPostorder(struct Node*node){
      if(node== NULL)
      return ;
      
      printPostorder(node->left);
      printPostorder(node->right);
      cout<<node->data<<" ";
  }
  
  void printPreorder(struct Node*node){
      
      if(node == NULL){
          return;
      }
      
      cout<<node->data<<" ";
      printPreorder(node->left);
      printPreorder(node->right);
  }
  

int main()
{
    struct Node*root = new Node(1);
    root->left = new Node(2);
    root->right = new Node(3);
    root->left->left = new Node(4);
    root->left->right = new Node(5);
 

   cout << "\nINorder traversal of binary tree is \n";
    printInorder(root);
 
    cout << "\nPOSTorder traversal of binary tree is \n";
    printPostorder(root);
 
    cout << "\nPREorder traversal of binary tree is \n";
    printPreorder(root);
 
    
    return 0;
}

